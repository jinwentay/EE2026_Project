`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
//-------------------------------------------------------------------------  
//                  DRAWING GRID LINES AND TICKS ON SCREEN
// Description:
// Grid lines are drawn at pixel # 320 along the x-axis, and
// pixel #768 along the y-axis

// Note the VGA controller is configured to produce a 1024 x 1280 pixel resolution
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
// TOOD:    Draw grid lines at every 80-th pixel along the horizontal axis, and every 64th pixel
//          along the vertical axis. This gives us a 16x16 grid on screen. 
//          
//          Further draw ticks on the central x and y grid lines spaced 16 and 8 pixels apart in the 
//          horizontal and vertical directions respectively. This gives us 5 sub-divisions per division 
//          in the horizontal and 8 sub-divisions per divsion in the vertical direction   
//-------------------------------------------------------------------------  
  
//////////////////////////////////////////////////////////////////////////////////


module Draw_Background(
    //input CLOCK,
    input [11:0] VGA_HORZ_COORD, //0 -> 1200 used to create vertical line
    input [11:0] VGA_VERT_COORD, //-6 -> 954 used to create horizontal line
    output [3:0] VGA_Red_Grid,
    output [3:0] VGA_Green_Grid,
    output [3:0] VGA_Blue_Grid
    );
   parameter X_axis = 800, Y_axis = 250; 
   parameter X_interval = 80, Y_interval = 64;
   //reg [20:0] counter = 0;
// The code below draws two grid lines. Modify the codes to draw more grid lines. 
 wire Condition_For_Grid = (VGA_HORZ_COORD == X_axis) || (VGA_HORZ_COORD == X_axis - X_interval) || (VGA_HORZ_COORD == X_axis - X_interval * 2) 
|| (VGA_HORZ_COORD == X_axis - X_interval * 3) || (VGA_HORZ_COORD == X_axis + X_interval) || (VGA_HORZ_COORD == X_axis - X_interval * 7) 
|| (VGA_HORZ_COORD == X_axis - X_interval * 4) || (VGA_HORZ_COORD == X_axis + X_interval * 2) || (VGA_HORZ_COORD == X_axis - X_interval * 8) 
|| (VGA_HORZ_COORD == X_axis - X_interval * 5) || (VGA_HORZ_COORD == X_axis + X_interval * 3) || (VGA_HORZ_COORD == X_axis - X_interval * 9)
|| (VGA_HORZ_COORD == X_axis - X_interval * 6) || (VGA_HORZ_COORD == X_axis + X_interval * 4) || (VGA_HORZ_COORD == X_axis - X_interval * 10)
|| (VGA_HORZ_COORD == X_axis + X_interval * 5)  //remove

|| (VGA_VERT_COORD == Y_axis) || (VGA_VERT_COORD == Y_axis + Y_interval) || (VGA_VERT_COORD == Y_axis + Y_interval * 2)
|| (VGA_VERT_COORD == Y_axis + Y_interval * 3) || (VGA_VERT_COORD == Y_axis - Y_interval) || (VGA_VERT_COORD == Y_axis + Y_interval * 7)
|| (VGA_VERT_COORD == Y_axis + Y_interval * 4) || (VGA_VERT_COORD == Y_axis - Y_interval * 2) || (VGA_VERT_COORD == Y_axis + Y_interval * 8)
|| (VGA_VERT_COORD == Y_axis + Y_interval * 5) || (VGA_VERT_COORD == Y_axis - Y_interval * 3) || (VGA_VERT_COORD == Y_axis + Y_interval * 9)
|| (VGA_VERT_COORD == Y_axis + Y_interval * 6) || (VGA_VERT_COORD == Y_axis - Y_interval * 4) || (VGA_VERT_COORD == Y_axis + Y_interval * 10)
|| (VGA_VERT_COORD == Y_axis + Y_interval * 11) /*|| (VGA_VERT_COORD == 471) || (VGA_VERT_COORD == 473) || (VGA_VERT_COORD == 472)*/;
// Using the gridline example, insert your code below to draw ticks on the x-axis and y-axis.
    wire Condition_For_Ticks = ((VGA_VERT_COORD == Y_axis) && (VGA_HORZ_COORD == X_axis + 16 * 60 || VGA_HORZ_COORD == X_axis + 16 * 59 || VGA_HORZ_COORD == X_axis + 16 * 58 || VGA_HORZ_COORD == X_axis + 16 * 57 || VGA_HORZ_COORD == X_axis + 16 * 56 || VGA_HORZ_COORD == X_axis + 16 * 55 || VGA_HORZ_COORD == X_axis + 16 * 54 || VGA_HORZ_COORD == X_axis + 16 * 53 || VGA_HORZ_COORD == X_axis + 16 * 52 || VGA_HORZ_COORD == X_axis + 16 * 51 || VGA_HORZ_COORD == X_axis + 16 * 50 || VGA_HORZ_COORD == X_axis + 16 * 49 || VGA_HORZ_COORD == X_axis + 16 * 48 || VGA_HORZ_COORD == X_axis + 16 * 47 || VGA_HORZ_COORD == X_axis + 16 * 46 || VGA_HORZ_COORD == X_axis + 16 * 45 || VGA_HORZ_COORD == X_axis + 16 * 44 || VGA_HORZ_COORD == X_axis + 16 * 43 || VGA_HORZ_COORD == X_axis + 16 * 42 || VGA_HORZ_COORD == X_axis + 16 * 41 || VGA_HORZ_COORD == X_axis + 16 * 40 || VGA_HORZ_COORD == X_axis + 16 * 39 || VGA_HORZ_COORD == X_axis + 16 * 38 || VGA_HORZ_COORD == X_axis + 16 * 37 || VGA_HORZ_COORD == X_axis + 16 * 36 || VGA_HORZ_COORD == X_axis + 16 * 35 || VGA_HORZ_COORD == X_axis + 16 * 34 || VGA_HORZ_COORD == X_axis + 16 * 33 || VGA_HORZ_COORD == X_axis + 16 * 32 || VGA_HORZ_COORD == X_axis + 16 * 31 || VGA_HORZ_COORD == X_axis + 16 * 30 || VGA_HORZ_COORD == X_axis + 16 * 29 || VGA_HORZ_COORD == X_axis + 16 * 28 || VGA_HORZ_COORD == X_axis + 16 * 27 || VGA_HORZ_COORD == X_axis + 16 * 26 || VGA_HORZ_COORD == X_axis + 16 * 25 || VGA_HORZ_COORD == X_axis + 16 * 24 || VGA_HORZ_COORD == X_axis + 16 * 23 || VGA_HORZ_COORD == X_axis + 16 * 22 || VGA_HORZ_COORD == X_axis + 16 * 21 || VGA_HORZ_COORD == X_axis + 16 * 20 || VGA_HORZ_COORD == X_axis + 16 * 19 || VGA_HORZ_COORD == X_axis + 16 * 18 || VGA_HORZ_COORD == X_axis + 16 * 17 || VGA_HORZ_COORD == X_axis + 16 * 16 || VGA_HORZ_COORD == X_axis + 16 * 15 || VGA_HORZ_COORD == X_axis + 16 * 14 || VGA_HORZ_COORD == X_axis + 16 * 13 || VGA_HORZ_COORD == X_axis + 16 * 12 || VGA_HORZ_COORD == X_axis + 16 * 11 || VGA_HORZ_COORD == X_axis + 16 * 10 || VGA_HORZ_COORD == X_axis + 16 * 9 || VGA_HORZ_COORD == X_axis + 16 * 8 || VGA_HORZ_COORD == X_axis + 16 * 7 || VGA_HORZ_COORD == X_axis + 16 * 6 || VGA_HORZ_COORD == X_axis + 16 * 5 || VGA_HORZ_COORD == X_axis + 16 * 4 || VGA_HORZ_COORD == X_axis + 16 * 3 || VGA_HORZ_COORD == X_axis + 16 * 2 || VGA_HORZ_COORD == X_axis + 16 * 1 || VGA_HORZ_COORD == X_axis - 16 * 1 || VGA_HORZ_COORD == X_axis - 16 * 2 || VGA_HORZ_COORD == X_axis - 16 * 3 || VGA_HORZ_COORD == X_axis - 16 * 4))
 || ((VGA_HORZ_COORD == X_axis) && ((VGA_VERT_COORD == Y_axis + 8) || (VGA_VERT_COORD == Y_axis + 8*2) || (VGA_VERT_COORD == Y_axis + 8*3)
    || (VGA_VERT_COORD == Y_axis + 8*4) || (VGA_VERT_COORD == Y_axis + 8*28) || (VGA_VERT_COORD == Y_axis + 8*51) || (VGA_VERT_COORD == Y_axis + 8*74)
    || (VGA_VERT_COORD == Y_axis + 8*5) || (VGA_VERT_COORD == Y_axis + 8*29) || (VGA_VERT_COORD == Y_axis + 8*52) || (VGA_VERT_COORD == Y_axis + 8*75)
    || (VGA_VERT_COORD == Y_axis + 8*6) || (VGA_VERT_COORD == Y_axis + 8*30) || (VGA_VERT_COORD == Y_axis + 8*53) || (VGA_VERT_COORD == Y_axis + 8*76)
    || (VGA_VERT_COORD == Y_axis + 8*7) || (VGA_VERT_COORD == Y_axis + 8*31) || (VGA_VERT_COORD == Y_axis + 8*54) || (VGA_VERT_COORD == Y_axis + 8*77)
    || (VGA_VERT_COORD == Y_axis + 8*8) || (VGA_VERT_COORD == Y_axis + 8*32) || (VGA_VERT_COORD == Y_axis + 8*55) || (VGA_VERT_COORD == Y_axis + 8*78)
    || (VGA_VERT_COORD == Y_axis + 8*9) || (VGA_VERT_COORD == Y_axis + 8*33) || (VGA_VERT_COORD == Y_axis + 8*56) || (VGA_VERT_COORD == Y_axis + 8*79)
    || (VGA_VERT_COORD == Y_axis + 8*10) || (VGA_VERT_COORD == Y_axis + 8*34) || (VGA_VERT_COORD == Y_axis + 8*57) || (VGA_VERT_COORD == Y_axis + 8*80)
    || (VGA_VERT_COORD == Y_axis + 8*11) || (VGA_VERT_COORD == Y_axis + 8*35) || (VGA_VERT_COORD == Y_axis + 8*58) || (VGA_VERT_COORD == Y_axis + 8*81)
    || (VGA_VERT_COORD == Y_axis + 8*12) || (VGA_VERT_COORD == Y_axis + 8*36) || (VGA_VERT_COORD == Y_axis + 8*59) || (VGA_VERT_COORD == Y_axis + 8*82)
    || (VGA_VERT_COORD == Y_axis + 8*13) || (VGA_VERT_COORD == Y_axis + 8*37) || (VGA_VERT_COORD == Y_axis + 8*60) || (VGA_VERT_COORD == Y_axis + 8*83)
    || (VGA_VERT_COORD == Y_axis + 8*14) || (VGA_VERT_COORD == Y_axis + 8*38) || (VGA_VERT_COORD == Y_axis + 8*61) || (VGA_VERT_COORD == Y_axis + 8*84)
    || (VGA_VERT_COORD == Y_axis + 8*15) || (VGA_VERT_COORD == Y_axis + 8*39) || (VGA_VERT_COORD == Y_axis + 8*62) || (VGA_VERT_COORD == Y_axis + 8*85)
    || (VGA_VERT_COORD == Y_axis + 8*16) || (VGA_VERT_COORD == Y_axis + 8*40) || (VGA_VERT_COORD == Y_axis + 8*63) || (VGA_VERT_COORD == Y_axis + 8*86)
    || (VGA_VERT_COORD == Y_axis + 8*17) || (VGA_VERT_COORD == Y_axis + 8*41) || (VGA_VERT_COORD == Y_axis + 8*64) || (VGA_VERT_COORD == Y_axis + 8*87)
    || (VGA_VERT_COORD == Y_axis + 8*18) || (VGA_VERT_COORD == Y_axis + 8*42) || (VGA_VERT_COORD == Y_axis + 8*65) || (VGA_VERT_COORD == Y_axis + 8*88)
    || (VGA_VERT_COORD == Y_axis + 8*19) || (VGA_VERT_COORD == Y_axis + 8*43) || (VGA_VERT_COORD == Y_axis + 8*66) || (VGA_VERT_COORD == Y_axis + 8*89)
    || (VGA_VERT_COORD == Y_axis + 8*20) || (VGA_VERT_COORD == Y_axis + 8*44) || (VGA_VERT_COORD == Y_axis + 8*67) || (VGA_VERT_COORD == Y_axis + 8*90)
    || (VGA_VERT_COORD == Y_axis + 8*21) || (VGA_VERT_COORD == Y_axis + 8*45) || (VGA_VERT_COORD == Y_axis + 8*68) || (VGA_VERT_COORD == Y_axis + 8*91)
    || (VGA_VERT_COORD == Y_axis + 8*22) || (VGA_VERT_COORD == Y_axis + 8*46) || (VGA_VERT_COORD == Y_axis + 8*69) || (VGA_VERT_COORD == Y_axis + 8*92)
    || (VGA_VERT_COORD == Y_axis + 8*23) || (VGA_VERT_COORD == Y_axis + 8*47) || (VGA_VERT_COORD == Y_axis + 8*70) || (VGA_VERT_COORD == Y_axis + 8*93)
    || (VGA_VERT_COORD == Y_axis + 8*24) || (VGA_VERT_COORD == Y_axis + 8*48) || (VGA_VERT_COORD == Y_axis + 8*71) || (VGA_VERT_COORD == Y_axis + 8*94)
    || (VGA_VERT_COORD == Y_axis + 8*25) || (VGA_VERT_COORD == Y_axis + 8*49) || (VGA_VERT_COORD == Y_axis + 8*72) || (VGA_VERT_COORD == Y_axis + 8*95)
    || (VGA_VERT_COORD == Y_axis + 8*26) || (VGA_VERT_COORD == Y_axis + 8*50) || (VGA_VERT_COORD == Y_axis + 8*73) || (VGA_VERT_COORD == Y_axis + 8*96)
    || (VGA_VERT_COORD == Y_axis + 8*27) ||
    VGA_VERT_COORD == Y_axis - 8 * 1 || VGA_VERT_COORD == Y_axis - 8 * 2 || VGA_VERT_COORD == Y_axis - 8 * 3 || VGA_VERT_COORD == Y_axis - 8 * 4 || VGA_VERT_COORD == Y_axis - 8 * 5 || VGA_VERT_COORD == Y_axis - 8 * 6 || VGA_VERT_COORD == Y_axis - 8 * 7 || VGA_VERT_COORD == Y_axis - 8 * 8 || VGA_VERT_COORD == Y_axis - 8 * 9 || VGA_VERT_COORD == Y_axis - 8 * 10 || VGA_VERT_COORD == Y_axis - 8 * 11 || VGA_VERT_COORD == Y_axis - 8 * 12 || VGA_VERT_COORD == Y_axis - 8 * 13 || VGA_VERT_COORD == Y_axis - 8 * 14 || VGA_VERT_COORD == Y_axis - 8 * 15 || VGA_VERT_COORD == Y_axis - 8 * 16 || VGA_VERT_COORD == Y_axis - 8 * 17 || VGA_VERT_COORD == Y_axis - 8 * 18 || VGA_VERT_COORD == Y_axis - 8 * 19 || VGA_VERT_COORD == Y_axis - 8 * 20 || VGA_VERT_COORD == Y_axis - 8 * 21 || VGA_VERT_COORD == Y_axis - 8 * 22 || VGA_VERT_COORD == Y_axis - 8 * 23 || VGA_VERT_COORD == Y_axis - 8 * 24 || VGA_VERT_COORD == Y_axis - 8 * 25 || VGA_VERT_COORD == Y_axis - 8 * 26 || VGA_VERT_COORD == Y_axis - 8 * 27 || VGA_VERT_COORD == Y_axis - 8 * 28 || VGA_VERT_COORD == Y_axis - 8 * 29 || VGA_VERT_COORD == Y_axis - 8 * 30 || VGA_VERT_COORD == Y_axis - 8 * 31 || VGA_VERT_COORD == Y_axis - 8 * 32));
// Please modify below codes to change the background color and to display ticks defined above
    assign VGA_Red_Grid = Condition_For_Ticks ? 4'hFFF : Condition_For_Grid ? 4'h0 : 4'h0 ;
    assign VGA_Green_Grid = Condition_For_Ticks ? 4'hFFF : Condition_For_Grid ? 4'hD : 4'h0 ;
    assign VGA_Blue_Grid = Condition_For_Ticks ? 4'hFFF : Condition_For_Grid ? 4'h0 : 4'h0 ;
    
                            // if true, a red pixel is put at coordinates (VGA_HORZ_COORD, VGA_VERT_COORD), 
     
endmodule
