`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
//-------------------------------------------------------------------------  
//                  DRAWING GRID LINES AND TICKS ON SCREEN
// Description:
// Grid lines are drawn at pixel # 320 along the x-axis, and
// pixel #768 along the y-axis

// Note the VGA controller is configured to produce a 1024 x 1280 pixel resolution
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
// TOOD:    Draw grid lines at every 80-th pixel along the horizontal axis, and every 64th pixel
//          along the vertical axis. This gives us a 16x16 grid on screen. 
//          
//          Further draw ticks on the central x and y grid lines spaced 16 and 8 pixels apart in the 
//          horizontal and vertical directions respectively. This gives us 5 sub-divisions per division 
//          in the horizontal and 8 sub-divisions per divsion in the vertical direction   
//-------------------------------------------------------------------------  
  
//////////////////////////////////////////////////////////////////////////////////


module Draw_Background(
    input [3:0] RED_AXIS,
    input [3:0] GREEN_AXIS,
    input [3:0] BLUE_AXIS,
    input [3:0] RED_BACK,
    input [3:0] GREEN_BACK,
    input [3:0] BLUE_BACK,
    input [11:0] VGA_HORZ_COORD, //0 -> 1200 used to create vertical line
    input [11:0] VGA_VERT_COORD, //-6 -> 954 used to create horizontal line
    output [3:0] VGA_Red_Grid,
    output [3:0] VGA_Green_Grid,
    output [3:0] VGA_Blue_Grid
    );
   parameter X_axis = 640, Y_axis = 512; 
   parameter X_interval = 80, Y_interval = 64;
   parameter X_tick_int = 16, Y_tick_int = 8;
   //reg [20:0] counter = 0;
// The code below draws two grid lines. Modify the codes to draw more grid lines. 
    wire Condition_For_Grid = (VGA_HORZ_COORD == X_axis || VGA_VERT_COORD == Y_axis) || (VGA_HORZ_COORD % X_interval == 0 && VGA_VERT_COORD % Y_tick_int == 0) || (VGA_HORZ_COORD % X_tick_int == 0 && VGA_VERT_COORD % Y_interval == 0) || (VGA_HORZ_COORD == 0 || VGA_HORZ_COORD == 1280 || VGA_VERT_COORD == 0 || VGA_VERT_COORD == 1024);
    wire Mode_selection;
    wire Condition_For_Ticks = (VGA_HORZ_COORD < X_axis + 2 && VGA_HORZ_COORD > X_axis - 2 && VGA_VERT_COORD % Y_tick_int == 0) || (VGA_VERT_COORD < Y_axis + 2 && VGA_VERT_COORD > Y_axis - 2 && VGA_HORZ_COORD % X_tick_int == 0)|| (VGA_HORZ_COORD < X_axis + 5 && VGA_HORZ_COORD > X_axis - 5 && VGA_VERT_COORD % Y_interval == 0) || (VGA_VERT_COORD < Y_axis + 5 && VGA_VERT_COORD > Y_axis - 5 && VGA_HORZ_COORD % X_interval == 0);
    assign VGA_Red_Grid = Condition_For_Ticks ? RED_AXIS : Condition_For_Grid ? RED_AXIS : RED_BACK ;
    assign VGA_Green_Grid = Condition_For_Ticks ? GREEN_AXIS : Condition_For_Grid ? GREEN_AXIS : GREEN_BACK ;
    assign VGA_Blue_Grid = Condition_For_Ticks ? BLUE_AXIS : Condition_For_Grid ? BLUE_AXIS : BLUE_BACK ;
endmodule
